23448096 + cg23451311 + cg23452458 + cg23455517 + cg23455614 + cg23455897 + cg23456306 + cg23456692 + cg23458892 + cg23459997 + cg23460697 + cg23462402 + cg23464269 + cg23470272 + cg23471482 + cg23472215 + cg23473726 + cg23473849 + cg23473904 + cg23475963 + cg23476955 + cg23477967 + cg23478284 + cg23479658 + cg23480499 + cg23481221 + cg23481748 + cg23484278 + cg23486067 + cg23487586 + cg23488190 + cg23489497 + cg23490074 + cg23491309 + cg23492043 + cg23494853 + cg23495059 + cg23495733 + cg23496260 + cg23499129 + cg23499956 + cg23502772 + cg23503501 + cg23504246 + cg23504707 + cg23506842 + cg23507131 + cg23508052 + cg23508540 + cg23508786 + cg23509064 + cg23509869 + cg23512028 + cg23512958 + cg23513504 + cg23513644 + cg23513690 + cg23514672 + cg23517548 + cg23517605 + cg23517664 + cg23517677 + cg23519022 + cg23519969 + cg23520347 + cg23521069 + cg23521281 + cg23523368 + cg23525180 + cg23526055 + cg23527067 + cg23528708 + cg23529954 + cg23530288 + cg23530850 + cg23533073 + cg23534142 + cg23536300 + cg23538064
 + cg23538854 + cg23539753 + cg23539966 + cg23540518 + cg23540651 + cg23540745 + cg23543604 + cg23546413 + cg23547073 + cg23547429 + cg23548479 + cg23548920 + cg23552468 + cg23555120 + cg23557926 + cg23558650 + cg23559331 + cg23560113 + cg23563234 + cg23564033 + cg23566335 + cg23566503 + cg23568913 + cg23570261 + cg23571857 + cg23574449 + cg23575320 + cg23576473 + cg23577242 + cg23578193 + cg23579062 + cg23580000 + cg23580945 + cg23581186 + cg23582408 + cg23582919 + cg23583739 + cg23585575 + cg23587449 + cg23587532 + cg23588553 + cg23588759 + cg23588893 + cg23591853 + cg23591869 + cg23594876 + cg23595927 + cg23596123 + cg23599056 + cg23599843 + cg23602533 + cg23602684 + cg23606023 + cg23606079 + cg23609672 + cg23609821 + cg23610018 + cg23610820 + cg23610841 + cg23612220 + cg23613030 + cg23613177 + cg23613305 + cg23613317 + cg23614979 + cg23615676 + cg23616377 + cg23616741 + cg23617121 + cg23617760 + cg23618830 + cg23619829 + cg23620639 + cg23621115 + cg23621689 + cg23621817 + cg23623692 + cg23625458 + cg236
26798 + cg23627134 + cg23628240 + cg23629183 + cg23629496 + cg23631636 + cg23632840 + cg23637791 + cg23637943 + cg23639989 + cg23640092 + cg23640701 + cg23640903 + cg23641145 + cg23641264 + cg23641267 + cg23641648 + cg23642747 + cg23643330 + cg23644127 + cg23644213 + cg23645091 + cg23651356 + cg23651728 + cg23652526 + cg23652631 + cg23652939 + cg23653008 + cg23653187 + cg23653712 + cg23654219 + cg23654545 + cg23654549 + cg23655719 + cg23656380 + cg23656386 + cg23657252 + cg23657409 + cg23659398 + cg23660082 + cg23660191 + cg23660999 + cg23661676 + cg23662675 + cg23663332 + cg23663476 + cg23663653 + cg23665568 + cg23665603 + cg23667407 + cg23667432 + cg23667933 + cg23668257 + cg23668631 + cg23670203 + cg23671708 + cg23673107 + cg23674788 + cg23674882 + cg23679085 + cg23679141 + cg23679724 + cg23680518 + cg23680936 + cg23681213 + cg23681243 + cg23683201 + cg23684521 + cg23685580 + cg23686014 + cg23687186 + cg23687319 + cg23687960 + cg23689916 + cg23690380 + cg23692497 + cg23693510 + cg23694248 + cg23695504 +
cg23696618 + cg23696712 + cg23696834 + cg23696886 + cg23696949 + cg23698058 + cg23698287 + cg23698969 + cg23699324 + cg23700778 + cg23702568 + cg23704082 + cg23704362 + cg23704703 + cg23705973 + cg23706211 + cg23706422 + cg23707493 + cg23707905 + cg23709121 + cg23710218 + cg23713520 + cg23713742 + cg23719124 + cg23719367 + cg23721140 + cg23722792 + cg23723933 + cg23724447 + cg23727043 + cg23727583 + cg23731764 + cg23732024 + cg23732182 + cg23733753 + cg23735442 + cg23736819 + cg23737055 + cg23737768 + cg23738770 + cg23739036 + cg23739862 + cg23740844 + cg23741330 + cg23743114 + cg23743472 + cg23744433 + cg23746359 + cg23748737 + cg23749046 + cg23749163 + cg23749760 + cg23750142 + cg23751724 + cg23751922 + cg23752923 + cg23752985 + cg23753610 + cg23756272 + cg23758485 + cg23759214 + cg23759710 + cg23760945 + cg23761196 + cg23761264 + cg23762517 + cg23764381 + cg23765993 + cg23767977 + cg23769143 + cg23771603 + cg23771661 + cg23771929 + cg23772500 + cg23772557 + cg23773532 + cg23776012 + cg23776217 + cg237779
56 + cg23779106 + cg23779331 + cg23780937 + cg23780947 + cg23786576 + cg23788167 + cg23790767 + cg23792364 + cg23792978 + cg23795623 + cg23796040 + cg23797100 + cg23799276 + cg23799313 + cg23801057 + cg23806715 + cg23807009 + cg23807559 + cg23807646 + cg23808301 + cg23813257 + cg23815000 + cg23815306 + cg23815491 + cg23815845 + cg23816572 + cg23817637 + cg23818978 + cg23820285 + cg23822915 + cg23824713 + cg23824815 + cg23827867 + cg23828212 + cg23828595 + cg23829949 + cg23830037 + cg23830326 + cg23830611 + cg23832061 + cg23833452 + cg23833896 + cg23834593 + cg23835812 + cg23836174 + cg23837897 + cg23838179 + cg23838531 + cg23839398 + cg23839680 + cg23841186 + cg23843505 + cg23843812 + cg23844090 + cg23845507 + cg23845773 + cg23850212 + cg23850272 + cg23850377 + cg23851011 + cg23854009 + cg23854921 + cg23855093 + cg23855121 + cg23855392 + cg23855566 + cg23855818 + cg23855989 + cg23857226 + cg23858074 + cg23858360 + cg23858565 + cg23859078 + cg23861715 + cg23862908 + cg23863670 + cg23864823 + cg23865067 + cg2
3865698 + cg23866755 + cg23867494 + cg23867624 + cg23868119 + cg23871659 + cg23871933 + cg23873703 + cg23874078 + cg23877385 + cg23877786 + cg23877831 + cg23878206 + cg23879147 + cg23881601 + cg23881725 + cg23881971 + cg23882824 + cg23886551 + cg23886755 + cg23887102 + cg23887396 + cg23888423 + cg23889010 + cg23889021 + cg23889093 + cg23889771 + cg23894003 + cg23894058 + cg23894539 + cg23896056 + cg23896545 + cg23897067 + cg23898073 + cg23900225 + cg23901896 + cg23902550 + cg23904249 + cg23905308 + cg23906144 + cg23906291 + cg23906760 + cg23909343 + cg23909633 + cg23910243 + cg23910835 + cg23911465 + cg23911972 + cg23912721 + cg23912823 + cg23913400 + cg23915008 + cg23915111 + cg23916158 + cg23916751 + cg23916845 + cg23916948 + cg23917399 + cg23918047 + cg23918676 + cg23919568 + cg23919867 + cg23920441 + cg23920917 + cg23921699 + cg23922081 + cg23922454 + cg23922708 + cg23922914 + cg23923462 + cg23926526 + cg23927367 + cg23933345 + cg23934633 + cg23935746 + cg23938476 + cg23940655 + cg23941599 + cg23943360
+ cg23943801 + cg23948756 + cg23948874 + cg23950724 + cg23953133 + cg23953396 + cg23953831 + cg23957084 + cg23957424 + cg23957915 + cg23959705 + cg23960723 + cg23963136 + cg23964386 + cg23966705 + cg23967169 + cg23968383 + cg23968678 + cg23970089 + cg23970338 + cg23970523 + cg23970785 + cg23972869 + cg23973000 + cg23973566 + cg23974202 + cg23977670 + cg23978322 + cg23978557 + cg23979923 + cg23980887 + cg23983173 + cg23983340 + cg23983366 + cg23983449 + cg23983884 + cg23984059 + cg23984130 + cg23984434 + cg23988310 + cg23988567 + cg23989635 + cg23993660 + cg23995753 + cg23995778 + cg23996241 + cg23996306 + cg23998987 + cg24000099 + cg24000189 + cg24001070 + cg24003306 + cg24003542 + cg24006361 + cg24008892 + cg24009109 + cg24009736 + cg24010336 + cg24010952 + cg24012034 + cg24012157 + cg24012708 + cg24012887 + cg24012925 + cg24014020 + cg24014661 + cg24016044 + cg24019564 + cg24019851 + cg24022301 + cg24022829 + cg24023606 + cg24024214 + cg24027342 + cg24027679 + cg24028122 + cg24030425 + cg24030449 + cg2403
0609 + cg24030627 + cg24030630 + cg24031606 + cg24034289 + cg24035370 + cg24035962 + cg24041453 + cg24041977 + cg24041995 + cg24042452 + cg24043192 + cg24043307 + cg24046110 + cg24046474 + cg24051818 + cg24053375 + cg24053587 + cg24053619 + cg24056562 + cg24056567 + cg24058120 + cg24058132 + cg24059075 + cg24060938 + cg24063382 + cg24063470 + cg24068372 + cg24068708 + cg24069559 + cg24070292 + cg24070847 + cg24073022 + cg24073051 + cg24073161 + cg24075743 + cg24076392 + cg24076399 + cg24076830 + cg24076884 + cg24077317 + cg24078828 + cg24079455 + cg24080529 + cg24081819 + cg24082826 + cg24083641 + cg24084891 + cg24085207 + cg24085258 + cg24087944 + cg24088229 + cg24088408 + cg24088438 + cg24088639 + cg24088751 + cg24091474 + cg24091698 + cg24092253 + cg24092914 + cg24098302 + cg24098951 + cg24099544 + cg24100167 + cg24101359 + cg24101578 + cg24101873 + cg24102360 + cg24104611 + cg24105685 + cg24105933 + cg24107142 + cg24107581 + cg24107665 + cg24109894 + cg24110050 + cg24110063 + cg24110916 + cg24113449 + c
g24115040 + cg24115571 + cg24115593 + cg24115627 + cg24116028 + cg24116886 + cg24117442 + cg24117468 + cg24120841 + cg24121001 + cg24121436 + cg24122922 + cg24123124 + cg24124398 + cg24124789 + cg24124977 + cg24125648 + cg24126851 + cg24127874 + cg24127989 + cg24130010 + cg24130043 + cg24132694 + cg24133080 + cg24133115 + cg24134767 + cg24136586 + cg24137081 + cg24138639 + cg24139421 + cg24141135 + cg24142014 + cg24142106 + cg24145210 + cg24146166 + cg24146183 + cg24147596 + cg24148044 + cg24150528 + cg24154474 + cg24155668 + cg24158546 + cg24160158 + cg24164563 + cg24165720 + cg24165760 + cg24166097 + cg24166628 + cg24167037 + cg24167841 + cg24167928 + cg24169822 + cg24169915 + cg24170090 + cg24170535 + cg24171152 + cg24172553 + cg24173049 + cg24176037 + cg24176563 + cg24178740 + cg24181591 + cg24182328 + cg24183484 + cg24183958 + cg24189717 + cg24192663 + cg24194132 + cg24194539 + cg24194775 + cg24196046 + cg24197445 + cg24198678 + cg24198840 + cg24199834 + cg24200059 + cg24202119 + cg24204740 + cg2420563
3 + cg24206256 + cg24206694 + cg24207176 + cg24208172 + cg24208206 + cg24210717 + cg24211388 + cg24211742 + cg24214470 + cg24215443 + cg24215727 + cg24216294 + cg24216701 + cg24216915 + cg24217726 + cg24217877 + cg24219058 + cg24219638 + cg24219962 + cg24220122 + cg24221059 + cg24222324 + cg24222435 + cg24229819 + cg24229963 + cg24231716 + cg24234277 + cg24235037 + cg24235633 + cg24236559 + cg24236938 + cg24237439 + cg24237576 + cg24238205 + cg24239808 + cg24240626 + cg24241455 + cg24242194 + cg24242519 + cg24243265 + cg24243406 + cg24244000 + cg24247865 + cg24248317 + cg24249775 + cg24250393 + cg24251035 + cg24252723 + cg24252809 + cg24254120 + cg24254206 + cg24256211 + cg24257768 + cg24262376 + cg24262469 + cg24264506 + cg24264578 + cg24265806 + cg24266238 + cg24266542 + cg24267801 + cg24269276 + cg24269657 + cg24269846 + cg24270244 + cg24272559 + cg24272907 + cg24273512 + cg24274272 + cg24274600 + cg24275354 + cg24276445 + cg24276491 + cg24278076 + cg24278423 + cg24283842 + cg24284910 + cg24286767 + cg24
287460 + cg24289167 + cg24290574 + cg24291845 + cg24292612 + cg24293567 + cg24297976 + cg24298280 + cg24300924 + cg24302095 + cg24304712 + cg24304714 + cg24305835 + cg24306924 + cg24307225 + cg24309555 + cg24310246 + cg24311282 + cg24311382 + cg24313770 + cg24315815 + cg24315860 + cg24317255 + cg24318412 + cg24319545 + cg24320643 + cg24321030 + cg24322623 + cg24323031 + cg24323434 + cg24323726 + cg24324379 + cg24325790 + cg24326142 + cg24329374 + cg24329717 + cg24329794 + cg24330042 + cg24330485 + cg24331079 + cg24331162 + cg24332422 + cg24332433 + cg24333473 + cg24334790 + cg24334879 + cg24334983 + cg24335149 + cg24335895 + cg24336531 + cg24337809 + cg24338843 + cg24340657 + cg24341129 + cg24341177 + cg24341220 + cg24341536 + cg24341800 + cg24341944 + cg24342628 + cg24343515 + cg24345138 + cg24345247 + cg24345793 + cg24346429 + cg24346637 + cg24349555 + cg24352499 + cg24352530 + cg24352736 + cg24353217 + cg24353466 + cg24353833 + cg24354652 + cg24355006 + cg24355048 + cg24355091 + cg24355174 + cg24356289 +
 cg24356544 + cg24356797 + cg24357161 + cg24358465 + cg24358529 + cg24362016 + cg24362401 + cg24362726 + cg24363955 + cg24364574 + cg24365013 + cg24365867 + cg24371157 + cg24371225 + cg24371383 + cg24373308 + cg24373760 + cg24377133 + cg24378421 + cg24382521 + cg24384676 + cg24385322 + cg24386906 + cg24387380 + cg24388263 + cg24389347 + cg24389359 + cg24391122 + cg24392274 + cg24392479 + cg24392574 + cg24394865 + cg24396745 + cg24399106 + cg24399405 + cg24399529 + cg24400943 + cg24401441 + cg24401912 + cg24402880 + cg24403722 + cg24404909 + cg24405636 + cg24407065 + cg24407308 + cg24408199 + cg24408313 + cg24408511 + cg24408817 + cg24409107 + cg24411312 + cg24412846 + cg24414089 + cg24414383 + cg24417499 + cg24418574 + cg24420778 + cg24421410 + cg24422489 + cg24423088 + cg24424381 + cg24426405 + cg24427660 + cg24428042 + cg24428760 + cg24429836 + cg24430616 + cg24432073 + cg24433189 + cg24434118 + cg24435562 + cg24435704 + cg24438217 + cg24438655 + cg24440147 + cg24441350 + cg24441911 + cg24442290 + cg24443
250 + cg24443367 + cg24443885 + cg24443925 + cg24444408 + cg24445405 + cg24446548 + cg24447890 + cg24448231 + cg24448259 + cg24449371 + cg24450157 + cg24450312 + cg24450631 + cg24453353 + cg24453664 + cg24454143 + cg24454435 + cg24454579 + cg24456340 + cg24457403 + cg24457521 + cg24459023 + cg24459209 + cg24459563 + cg24461814 + cg24467291 + cg24468890 + cg24469114 + cg24469803 + cg24469977 + cg24471268 + cg24471555 + cg24471867 + cg24471894 + cg24473385 + cg24473633 + cg24474182 + cg24474998 + cg24475171 + cg24476569 + cg24477567 + cg24477636 + cg24478145 + cg24478387 + cg24478630 + cg24480194 + cg24480859 + cg24481163 + cg24481633 + cg24482053 + cg24482234 + cg24484103 + cg24484296 + cg24485466 + cg24488435 + cg24489015 + cg24489237 + cg24490338 + cg24490859 + cg24492022 + cg24493940 + cg24494008 + cg24494556 + cg24495017 + cg24496666 + cg24497270 + cg24497819 + cg24497877 + cg24498554 + cg24499411 + cg24499839 + cg24500683 + cg24502084 + cg24504986 + cg24505122 + cg24505341 + cg24505375 + cg24505527 + cg
24506604 + cg24507762 + cg24509668 + cg24511869 + cg24512303 + cg24512400 + cg24512973 + cg24513045 + cg24514921 + cg24515202 + cg24516061 + cg24516901 + cg24517042 + cg24517609 + cg24520070 + cg24520800 + cg24523000 + cg24523456 + cg24523758 + cg24524435 + cg24525573 + cg24526899 + cg24527001 + cg24528447 + cg24528523 + cg24529858 + cg24530795 + cg24532476 + cg24532669 + cg24535573 + cg24541550 + cg24543400 + cg24545967 + cg24546463 + cg24546942 + cg24547948 + cg24549085 + cg24549507 + cg24552358 + cg24552431 + cg24555600 + cg24555656 + cg24556026 + cg24558204 + cg24560809 + cg24562819 + cg24568646 + cg24570987 + cg24573310 + cg24573501 + cg24574111 + cg24576270 + cg24576425 + cg24576735 + cg24577137 + cg24579667 + cg24579896 + cg24580001 + cg24580056 + cg24580185 + cg24580526 + cg24580782 + cg24582500 + cg24585690 + cg24587268 + cg24588599 + cg24592207 + cg24592364 + cg24593475 + cg24594997 + cg24595957 + cg24596472 + cg24596576 + cg24597988 + cg24599739 + cg24599942 + cg24602243 + cg24603941 + cg24605304
 + cg24606773 + cg24607398 + cg24607535 + cg24608308 + cg24608774 + cg24611092 + cg24611631 + cg24612198 + cg24612772 + cg24613957 + cg24615044 + cg24615251 + cg24616461 + cg24618244 + cg24618716 + cg24619694 + cg24620905 + cg24621042 + cg24621354 + cg24623271 + cg24623694 + cg24624819 + cg24624841 + cg24625128 + cg24625388 + cg24626923 + cg24628744 + cg24631950 + cg24633242 + cg24633648 + cg24635866 + cg24638647 + cg24641352 + cg24641737 + cg24642468 + cg24642516 + cg24642523 + cg24642820 + cg24645221 + cg24646414 + cg24646513 + cg24646710 + cg24648061 + cg24649346 + cg24649641 + cg24649713 + cg24650229 + cg24650353 + cg24650394 + cg24650501 + cg24651706 + cg24652271 + cg24652919 + cg24653181 + cg24653967 + cg24654350 + cg24654547 + cg24655310 + cg24659201 + cg24660086 + cg24661752 + cg24662718 + cg24662961 + cg24664861 + cg24664957 + cg24668150 + cg24670151 + cg24670715 + cg24673765 + cg24674220 + cg24674703 + cg24675098 + cg24677780 + cg24678320 + cg24678429 + cg24679082 + cg24680602 + cg24680924 + cg246
82149 + cg24682740 + cg24683061 + cg24683129 + cg24685926 + cg24686224 + cg24686358 + cg24686542 + cg24687051 + cg24687335 + cg24687764 + cg24688248 + cg24690731 + cg24691255 + cg24691453 + cg24691461 + cg24691578 + cg24692716 + cg24692964 + cg24693053 + cg24693368 + cg24693620 + cg24693909 + cg24694549 + cg24695828 + cg24697031 + cg24697184 + cg24697329 + cg24697682 + cg24698533 + cg24698622 + cg24701874 + cg24703623 + cg24703717 + cg24705286 + cg24709471 + cg24710073 + cg24710886 + cg24711626 + cg24711914 + cg24712395 + cg24713080 + cg24713204 + cg24715106 + cg24715245 + cg24715735 + cg24719575 + cg24719601 + cg24719984 + cg24723331 + cg24724583 + cg24727182 + cg24727203 + cg24727568 + cg24728447 + cg24730207 + cg24731756 + cg24733384 + cg24734575 + cg24735489 + cg24735937 + cg24736099 + cg24737900 + cg24738006 + cg24739326 + cg24740435 + cg24743283 + cg24743310 + cg24744425 + cg24745738 + cg24747122 + cg24747396 + cg24748786 + cg24748945 + cg24749970 + cg24750391 + cg24751129 + cg24754277 + cg24758027 +
cg24759821 + cg24760768 + cg24762359 + cg24762437 + cg24765079 + cg24765446 + cg24767315 + cg24768561 + cg24769045 + cg24770649 + cg24770850 + cg24775607 + cg24776019 + cg24776407 + cg24777065 + cg24777454 + cg24777710 + cg24777762 + cg24777950 + cg24778383 + cg24779015 + cg24781100 + cg24783979 + cg24784109 + cg24789424 + cg24789869 + cg24790296 + cg24791546 + cg24792272 + cg24792360 + cg24792749 + cg24793265 + cg24793470 + cg24793903 + cg24794433 + cg24794531 + cg24794734 + cg24794758 + cg24794992 + cg24796403 + cg24797830 + cg24797967 + cg24798047 + cg24800810 + cg24800887 + cg24801210 + cg24805239 + cg24807354 + cg24808674 + cg24809640 + cg24809768 + cg24812103 + cg24812167 + cg24812297 + cg24812523 + cg24813212 + cg24815853 + cg24816298 + cg24816455 + cg24816866 + cg24817430 + cg24818418 + cg24818434 + cg24820250 + cg24820508 + cg24820809 + cg24821554 + cg24822446 + cg24823993 + cg24824266 + cg24824840 + cg24825722 + cg24826645 + cg24826867 + cg24829483 + cg24831427 + cg24832140 + cg24832353 + cg248331
76 + cg24833277 + cg24834740 + cg24835159 + cg24836175 + cg24836583 + cg24838010 + cg24840099 + cg24841244 + cg24844534 + cg24845207 + cg24847163 + cg24847572 + cg24849648 + cg24851490 + cg24852661 + cg24854010 + cg24855780 + cg24856383 + cg24856732 + cg24857117 + cg24857721 + cg24858591 + cg24859228 + cg24860534 + cg24861272 + cg24862483 + cg24866437 + cg24867501 + cg24868271 + cg24868525 + cg24870273 + cg24870391 + cg24871743 + cg24873414 + cg24874111 + cg24875415 + cg24877842 + cg24879335 + cg24879595 + cg24880821 + cg24881834 + cg24883276 + cg24883732 + cg24884084 + cg24886748 + cg24887211 + cg24888049 + cg24889366 + cg24889744 + cg24890043 + cg24890286 + cg24890446 + cg24891133 + cg24892074 + cg24892510 + cg24893837 + cg24895052 + cg24896109 + cg24898753 + cg24898863 + cg24899750 + cg24901042 + cg24901474 + cg24903376 + cg24903794 + cg24904765 + cg24905739 + cg24906202 + cg24906992 + cg24907852 + cg24908058 + cg24908499 + cg24909445 + cg24909737 + cg24909975 + cg24910675 + cg24911803 + cg24912023 + cg2
4912560 + cg24914244 + cg24914860 + cg24916177 + cg24917645 + cg24919884 + cg24919972 + cg24920358 + cg24921089 + cg24921858 + cg24922045 + cg24922992 + cg24923526 + cg24924631 + cg24924779 + cg24926042 + cg24926276 + cg24926780 + cg24928161 + cg24928378 + cg24928687 + cg24929737 + cg24929834 + cg24930915 + cg24934431 + cg24935900 + cg24936630 + cg24936956 + cg24937126 + cg24937706 + cg24938727 + cg24939733 + cg24940601 + cg24941797 + cg24946133 + cg24946408 + cg24946544 + cg24947394 + cg24949049 + cg24949344 + cg24949488 + cg24950749 + cg24951114 + cg24956866 + cg24957240 + cg24957950 + cg24958765 + cg24959428 + cg24964368 + cg24965984 + cg24966460 + cg24968336 + cg24968786 + cg24970539 + cg24971490 + cg24974130 + cg24974477 + cg24974599 + cg24975222 + cg24975564 + cg24975769 + cg24975842 + cg24977027 + cg24977709 + cg24979630 + cg24980458 + cg24980583 + cg24981018 + cg24983959 + cg24986572 + cg24986868 + cg24987170 + cg24987706 + cg24988345 + cg24989962 + cg24990612 + cg24991452 + cg24992780 + cg24993443
+ cg24994350 + cg24995240 + cg24995381 + cg24995798 + cg24997562 + cg24997944 + cg24999727 + cg24999924 + cg25000382 + cg25002911 + cg25003924 + cg25004981 + cg25006823 + cg25007250 + cg25007680 + cg25010118 + cg25011395 + cg25013053 + cg25013058 + cg25013838 + cg25013852 + cg25014318 + cg25017250 + cg25017304 + cg25017837 + cg25018329 + cg25018755 + cg25018881 + cg25020204 + cg25020459 + cg25020850 + cg25021182 + cg25021247 + cg25022327 + cg25023057 + cg25023245 + cg25023829 + cg25023941 + cg25023994 + cg25025243 + cg25025866 + cg25026013 + cg25026754 + cg25027167 + cg25027501 + cg25028542 + cg25032865 + cg25033144 + cg25033972 + cg25033993 + cg25034557 + cg25040282 + cg25040733 + cg25040783 + cg25041148 + cg25041439 + cg25042226 + cg25043279 + cg25044651 + cg25047001 + cg25047102 + cg25047280 + cg25047378 + cg25048564 + cg25050026 + cg25053891 + cg25054311 + cg25055403 + cg25055477 + cg25057743 + cg25058957 + cg25059436 + cg25059792 + cg25059899 + cg25060020 + cg25060573 + cg25061755 + cg25065147 + cg2506
6857 + cg25067197 + cg25068445 + cg25070010 + cg25070480 + cg25070637 + cg25072179 + cg25072962 + cg25076881 + cg25077328 + cg25077654 + cg25077752 + cg25081201 + cg25082710 + cg25083781 + cg25084220 + cg25084525 + cg25084878 + cg25085950 + cg25086702 + cg25087423 + cg25088874 + cg25089231 + cg25092283 + cg25092328 + cg25092540 + cg25093045 + cg25094569 + cg25094927 + cg25095380 + cg25095612 + cg25095814 + cg25095951 + cg25096582 + cg25097436 + cg25097676 + cg25098095 + cg25098401 + cg25098644 + cg25101056 + cg25101936 + cg25103286 + cg25104030 + cg25104511 + cg25106358 + cg25106814 + cg25107791 + cg25107903 + cg25107978 + cg25109024 + cg25110234 + cg25111781 + cg25112044 + cg25112191 + cg25112853 + cg25115460 + cg25117362 + cg25117976 + cg25118574 + cg25119415 + cg25122941 + cg25123470 + cg25124030 + cg25124223 + cg25124433 + cg25124636 + cg25125453 + cg25126052 + cg25126812 + cg25128803 + cg25131727 + cg25132078 + cg25133016 + cg25133685 + cg25133753 + cg25134071 + cg25136045 + cg25136310 + cg25136687 + c
g25136926 + cg25138936 + cg25139619 + cg25140370 + cg25140501 + cg25140571 + cg25141490 + cg25141674 + cg25141720 + cg25141995 + cg25142416 + cg25145670 + cg25148589 + cg25149155 + cg25149927 + cg25151295 + cg25151806 + cg25152348 + cg25152631 + cg25152942 + cg25153340 + cg25156443 + cg25157408 + cg25157874 + cg25159539 + cg25159610 + cg25159668 + cg25160554 + cg25162301 + cg25162794 + cg25162921 + cg25163134 + cg25163476 + cg25165199 + cg25165880 + cg25166896 + cg25167447 + cg25167643 + cg25167838 + cg25168545 + cg25169784 + cg25171089 + cg25172835 + cg25173010 + cg25174591 + cg25175370 + cg25176823 + cg25177139 + cg25177452 + cg25178645 + cg25179291 + cg25179963 + cg25181284 + cg25181693 + cg25182523 + cg25182621 + cg25186143 + cg25186211 + cg25187533 + cg25189085 + cg25191725 + cg25192419 + cg25193278 + cg25193494 + cg25194415 + cg25195673 + cg25198545 + cg25201363 + cg25201980 + cg25202404 + cg25202471 + cg25203561 + cg25203856 + cg25203980 + cg25206802 + cg25208892 + cg25211252 + cg25211525 + cg2521434
6 + cg25214366 + cg25215340 + cg25216696 + cg25217357 + cg25217765 + cg25218351 + cg25219047 + cg25219134 + cg25219333 + cg25221254 + cg25221625 + cg25225073 + cg25225238 + cg25226014 + cg25226247 + cg25227148 + cg25228126 + cg25228746 + cg25229015 + cg25229172 + cg25229305 + cg25229706 + cg25229964 + cg25230532 + cg25232934 + cg25234611 + cg25234963 + cg25239996 + cg25240333 + cg25241845 + cg25242557 + cg25243721 + cg25245322 + cg25249068 + cg25250358 + cg25250998 + cg25251635 + cg25255679 + cg25255854 + cg25256723 + cg25258291 + cg25259754 + cg25261329 + cg25261908 + cg25263140 + cg25263559 + cg25264554 + cg25266232 + cg25267732 + cg25268451 + cg25268678 + cg25268718 + cg25270252 + cg25274750 + cg25276849 + cg25277950 + cg25282410 + cg25282780 + cg25283297 + cg25283338 + cg25283823 + cg25284492 + cg25287375 + cg25288155 + cg25290938 + cg25291907 + cg25293251 + cg25294646 + cg25298754 + cg25299176 + cg25299676 + cg25300386 + cg25300941 + cg25301180 + cg25302370 + cg25302419 + cg25303383 + cg25304860 + cg25
306170 + cg25306927 + cg25307081 + cg25307641 + cg25307902 + cg25308542 + cg25309588 + cg25310567 + cg25313204 + cg25314216 + cg25315362 + cg25316898 + cg25322008 + cg25322211 + cg25323711 + cg25324046 + cg25325612 + cg25327013 + cg25327247 + cg25329939 + cg25332298 + cg25335775 + cg25336198 + cg25336579 + cg25340056 + cg25340403 + cg25341032 + cg25341653 + cg25341726 + cg25344367 + cg25344639 + cg25344672 + cg25345005 + cg25345738 + cg25346576 + cg25346972 + cg25349574 + cg25350411 + cg25351036 + cg25352650 + cg25355065 + cg25355803 + cg25356214 + cg25356886 + cg25358289 + cg25358938 + cg25361106 + cg25361844 + cg25363317 + cg25363445 + cg25366404 + cg25368651 + cg25370441 + cg25371038 + cg25371088 + cg25371182 + cg25371560 + cg25372103 + cg25372135 + cg25372195 + cg25372693 + cg25374813 + cg25374854 + cg25375711 + cg25375764 + cg25377358 + cg25378769 + cg25381844 + cg25383093 + cg25383242 + cg25384157 + cg25384595 + cg25385272 + cg25388528 + cg25391023 + cg25392935 + cg25395108 + cg25396537 + cg25397076 +
 cg25397562 + cg25397779 + cg25398949 + cg25399367 + cg25400358 + cg25402049 + cg25404088 + cg25406518 + cg25406735 + cg25409040 + cg25411534 + cg25411725 + cg25412384 + cg25412453 + cg25413757 + cg25414165 + cg25415932 + cg25416014 + cg25416363 + cg25416372 + cg25417405 + cg25418748 + cg25418831 + cg25420398 + cg25420583 + cg25420952 + cg25421002 + cg25421647 + cg25421694 + cg25422943 + cg25423111 + cg25423402 + cg25423576 + cg25424525 + cg25425005 + cg25425074 + cg25425078 + cg25426302 + cg25426743 + cg25427580 + cg25427638 + cg25428293 + cg25428451 + cg25429010 + cg25430696 + cg25431974 + cg25432323 + cg25432696 + cg25432997 + cg25433648 + cg25434223 + cg25436946 + cg25437385 + cg25437402 + cg25438054 + cg25438415 + cg25438440 + cg25438963 + cg25443975 + cg25446086 + cg25447894 + cg25448636 + cg25450806 + cg25454755 + cg25454890 + cg25455753 + cg25457027 + cg25457331 + cg25458920 + cg25459323 + cg25459778 + cg25461905 + cg25461934 + cg25462291 + cg25462303 + cg25463135 + cg25463409 + cg25463428 + cg25463
779 + cg25464840 + cg25465406 + cg25465634 + cg25466368 + cg25466974 + cg25467043 + cg25467603 + cg25468723 + cg25470175 + cg25473396 + cg25475171 + cg25475443 + cg25476145 + cg25477181 + cg25477904 + cg25477928 + cg25478157 + cg25478603 + cg25479216 + cg25481253 + cg25482967 + cg25483003 + cg25483839 + cg25484319 + cg25484373 + cg25484904 + cg25485128 + cg25485913 + cg25487438 + cg25488021 + cg25488082 + cg25488206 + cg25490410 + cg25490411 + cg25492727 + cg25494064 + cg25494227 + cg25494789 + cg25495394 + cg25499017 + cg25499099 + cg25500285 + cg25500444 + cg25501446 + cg25503559 + cg25505610 + cg25505974 + cg25506396 + cg25506900 + cg25507001 + cg25509184 + cg25510610 + cg25511429 + cg25511807 + cg25512587 + cg25513133 + cg25514304 + cg25514503 + cg25515063 + cg25516544 + cg25519930 + cg25522312 + cg25523753 + cg25524350 + cg25524473 + cg25526759 + cg25527547 + cg25530169 + cg25533361 + cg25533774 + cg25535027 + cg25536300 + cg25536676 + cg25537724 + cg25537774 + cg25537962 + cg25538571 + cg25539131 + cg
25543604 + cg25543676 + cg25544551 + cg25545088 + cg25545182 + cg25545210 + cg25545845 + cg25546588 + cg25547939 + cg25548825 + cg25549230 + cg25549413 + cg25549459 + cg25550573 + cg25551168 + cg25552492 + cg25552889 + cg25553916 + cg25554036 + cg25555137 + cg25556101 + cg25557858 + cg25558099 + cg25559100 + cg25559243 + cg25559625 + cg25560840 + cg25563456 + cg25563642 + cg25564800 + cg25565479 + cg25567232 + cg25568243 + cg25569462 + cg25569582 + cg25572812 + cg25573386 + cg25574024 + cg25574548 + cg25575065 + cg25575359 + cg25577842 + cg25580018 + cg25580076 + cg25583174 + cg25584626 + cg25587233 + cg25589890 + cg25590938 + cg25591867 + cg25593040 + cg25593948 + cg25595446 + cg25596297 + cg25598083 + cg25599211 + cg25599242 + cg25600236 + cg25600606 + cg25602457 + cg25604883 + cg25605045 + cg25605408 + cg25607161 + cg25608041 + cg25608949 + cg25611931 + cg25612145 + cg25612480 + cg25615963 + cg25616762 + cg25619607 + cg25620220 + cg25622628 + cg25623459 + cg25623640 + cg25624712 + cg25629118 + cg25629694
 + cg25631352 + cg25632001 + cg25632203 + cg25634666 + cg25635316 + cg25635352 + cg25635500 + cg25636075 + cg25637824 + cg25638984 + cg25640176 + cg25645462 + cg25650110 + cg25650811 + cg25651505 + cg25653103 + cg25655096 + cg25657700 + cg25657834 + cg25658178 + cg25658980 + cg25659818 + cg25661781 + cg25661884 + cg25662535 + cg25662680 + cg25664034 + cg25664725 + cg25665528 + cg25665697 + cg25667202 + cg25668368 + cg25668626 + cg25670376 + cg25671438 + cg25671651 + cg25672287 + cg25673373 + cg25674286 + cg25675349 + cg25677688 + cg25677709 + cg25680829 + cg25681177 + cg25682080 + cg25682559 + cg25682936 + cg25683012 + cg25683185 + cg25683904 + cg25685640 + cg25687894 + cg25689649 + cg25689955 + cg25690265 + cg25691167 + cg25692323 + cg25692621 + cg25694542 + cg25697050 + cg25697314 + cg25699533 + cg25705900 + cg25707005 + cg25711779 + cg25712380 + cg25713185 + cg25713309 + cg25716286 + cg25716740 + cg25716871 + cg25717844 + cg25718402 + cg25718438 + cg25720804 + cg25722142 + cg25723866 + cg25724441 + cg257
25843 + cg25729068 + cg25729716 + cg25729765 + cg25729957 + cg25732252 + cg25734864 + cg25735280 + cg25736482 + cg25737491 + cg25737664 + cg25737836 + cg25738273 + cg25739003 + cg25741319 + cg25741452 + cg25741794 + cg25742201 + cg25743584 + cg25745343 + cg25746138 + cg25748127 + cg25750259 + cg25750404 + cg25751295 + cg25752527 + cg25753817 + cg25755261 + cg25756129 + cg25757737 + cg25759381 + cg25759517 + cg25760229 + cg25762395 + cg25762706 + cg25763788 + cg25764191 + cg25764464 + cg25764570 + cg25766046 + cg25766774 + cg25769980 + cg25770411 + cg25771195 + cg25771201 + cg25775449 + cg25776555 + cg25778166 + cg25778479 + cg25780543 + cg25781123 + cg25781162 + cg25781202 + cg25782229 + cg25782563 + cg25784308 + cg25784394 + cg25785378 + cg25786436 + cg25786862 + cg25787984 + cg25788012 + cg25791888 + cg25797366 + cg25799433 + cg25799986 + cg25802093 + cg25802424 + cg25802871 + cg25803423 + cg25803583 + cg25806808 + cg25807810 + cg25808839 + cg25808906 + cg25809905 + cg25811575 + cg25811820 + cg25812776 +
cg25813714 + cg25814686 + cg25816468 + cg25817752 + cg25820693 + cg25820971 + cg25821963 + cg25822709 + cg25823578 + cg25824226 + cg25824330 + cg25826526 + cg25827112 + cg25827139 + cg25827666 + cg25828381 + cg25829226 + cg25829729 + cg25830052 + cg25831111 + cg25832796 + cg25833031 + cg25834275 + cg25834568 + cg25835225 + cg25836159 + cg25836271 + cg25836301 + cg25836326 + cg25839227 + cg25839766 + cg25840094 + cg25841091 + cg25841987 + cg25842356 + cg25842633 + cg25843439 + cg25847835 + cg25848060 + cg25849332 + cg25852472 + cg25852715 + cg25852941 + cg25853020 + cg25853078 + cg25853833 + cg25854162 + cg25856179 + cg25856383 + cg25856811 + cg25857886 + cg25858682 + cg25859012 + cg25860314 + cg25861458 + cg25864727 + cg25866075 + cg25867173 + cg25870263 + cg25870420 + cg25873362 + cg25875213 + cg25876934 + cg25881193 + cg25882056 + cg25882366 + cg25884854 + cg25885108 + cg25885771 + cg25886284 + cg25886875 + cg25887294 + cg25887739 + cg25889160 + cg25890048 + cg25892041 + cg25892434 + cg25894551 + cg258959
22 + cg25896975 + cg25898500 + cg25900806 + cg25902460 + cg25902889 + cg25903122 + cg25903375 + cg25903497 + cg25905459 + cg25905648 + cg25905812 + cg25906332 + cg25906419 + cg25907916 + cg25908985 + cg25909811 + cg25910443 + cg25912611 + cg25912717 + cg25913233 + cg25915982 + cg25917510 + cg25918245 + cg25919221 + cg25920792 + cg25920951 + cg25921910 + cg25922239 + cg25922353 + cg25923018 + cg25923856 + cg25924032 + cg25926679 + cg25927124 + cg25928444 + cg25928579 + cg25929421 + cg25932713 + cg25934198 + cg25935911 + cg25936385 + cg25937494 + cg25937832 + cg25938646 + cg25942450 + cg25943131 + cg25943276 + cg25943702 + cg25944100 + cg25944700 + cg25945303 + cg25945374 + cg25945961 + cg25946374 + cg25946389 + cg25946758 + cg25946952 + cg25947945 + cg25948180 + cg25948993 + cg25949363 + cg25951582 + cg25953146 + cg25954162 + cg25954354 + cg25955816 + cg25955899 + cg25955969 + cg25956985 + cg25957124 + cg25957967 + cg25958361 + cg25959506 + cg25960313 + cg25960567 + cg25961684 + cg25964007 + cg25965576 + cg2
5969212 + cg25969673 + cg25971347 + cg25973092 + cg25974617 + cg25974764 + cg25974870 + cg25975818 + cg25978208 + cg25979644 + cg25982743 + cg25983380 + cg25984124 + cg25985103 + cg25985437 + cg25985488 + cg25985778 + cg25989745 + cg25990230 + cg25990314 + cg25990647 + cg25993718 + cg25994725 + cg25995212 + cg25995460 + cg25995916 + cg25996835 + cg25997474 + cg25999015 + cg25999267 + cg25999486 + cg25999867 + cg26001030 + cg26001336 + cg26003813 + cg26005082 + cg26007077 + cg26008464 + cg26012103 + cg26014197 + cg26014796 + cg26015133 + cg26018901 + cg26020513 + cg26021103 + cg26021476 + cg26021627 + cg26022315 + cg26022401 + cg26023204 + cg26023389 + cg26023751 + cg26024206 + cg26024531 + cg26024843 + cg26025891 + cg26025944 + cg26026726 + cg26029248 + cg26029902 + cg26033681 + cg26033710 + cg26035366 + cg26035463 + cg26036443 + cg26039806 + cg26041297 + cg26043257 + cg26043391 + cg26044825 + cg26045205 + cg26045220 + cg26045434 + cg26049501 + cg26050734 + cg26052367 + cg26053864 + cg26054395 + cg26054540
+ cg26055770 + cg26057752 + cg26059153 + cg26059632 + cg26060255 + cg26061555 + cg26061772 + cg26062370 + cg26062856 + cg26063872 + cg26065841 + cg26065952 + cg26066361 + cg26069252 + cg26069745 + cg26071823 + cg26071978 + cg26073060 + cg26073856 + cg26074851 + cg26079320 + cg26079992 + cg26081162 + cg26081812 + cg26082838 + cg26083396 + cg26087862 + cg26088104 + cg26089280 + cg26090652 + cg26090660 + cg26091119 + cg26091142 + cg26091510 + cg26091679 + cg26091688 + cg26091981 + cg26093148 + cg26093687 + cg26093711 + cg26095194 + cg26096837 + cg26097271 + cg26099316 + cg26102760 + cg26104204 + cg26104206 + cg26104469 + cg26105232 + cg26106720 + cg26107778 + cg26109803 + cg26111030 + cg26111757 + cg26112353 + cg26112639 + cg26112901 + cg26113512 + cg26114571 + cg26116103 + cg26116551 + cg26117023 + cg26117431 + cg26119740 + cg26119796 + cg26123414 + cg26124016 + cg26125443 + cg26125600 + cg26127679 + cg26128092 + cg26128441 + cg26129270 + cg26129916 + cg26130726 + cg26131019 + cg26131911 + cg26132665 + cg2613
2853 + cg26133068 + cg26134665 + cg26135325 + cg26135716 + cg26136776 + cg26137790 + cg26137794 + cg26138224 + cg26139360 + cg26141626 + cg26143719 + cg26144265 + cg26145103 + cg26145228 + cg26146086 + cg26147132 + cg26147338 + cg26147480 + cg26147657 + cg26149550 + cg26149678 + cg26149738 + cg26151310 + cg26151675 + cg26152597 + cg26153631 + cg26153642 + cg26154999 + cg26155152 + cg26155617 + cg26158194 + cg26158980 + cg26159905 + cg26159933 + cg26160573 + cg26162582 + cg26162695 + cg26163537 + cg26164184 + cg26164310 + cg26165608 + cg26168249 + cg26168975 + cg26170257 + cg26170660 + cg26171231 + cg26172108 + cg26174387 + cg26174752 + cg26177629 + cg26179948 + cg26180557 + cg26181372 + cg26183662 + cg26185508 + cg26186727 + cg26187237 + cg26189983 + cg26190136 + cg26191951 + cg26194560 + cg26195577 + cg26195812 + cg26196700 + cg26197220 + cg26198776 + cg26198807 + cg26199493 + cg26200580 + cg26200585 + cg26201213 + cg26201579 + cg26202340 + cg26203861 + cg26205131 + cg26205432 + cg26206598 + cg26207503 + c
g26208930 + cg26209058 + cg26209676 + cg26211698 + cg26212229 + cg26212924 + cg26215428 + cg26215727 + cg26216632 + cg26217633 + cg26218269 + cg26219051 + cg26220350 + cg26220985 + cg26221491 + cg26221631 + cg26222045 + cg26222229 + cg26223987 + cg26224139 + cg26226968 + cg26227005 + cg26227465 + cg26228569 + cg26229274 + cg26229607 + cg26229648 + cg26232005 + cg26232187 + cg26232558 + cg26233209 + cg26233253 + cg26233468 + cg26233529 + cg26233914 + cg26235710 + cg26238727 + cg26239051 + cg26239233 + cg26240353 + cg26240433 + cg26240939 + cg26244225 + cg26245011 + cg26245202 + cg26246296 + cg26247501 + cg26248486 + cg26251101 + cg26251865 + cg26252167 + cg26255649 + cg26255848 + cg26256793 + cg26258330 + cg26258845 + cg26259363 + cg26259575 + cg26259610 + cg26259865 + cg26260201 + cg26260350 + cg26261431 + cg26264314 + cg26265060 + cg26265187 + cg26266098 + cg26266326 + cg26267310 + cg26267341 + cg26267561 + cg26270746 + cg26271255 + cg26272237 + cg26276530 + cg26277709 + cg26277809 + cg26279025 + cg2628215
0 + cg26282384 + cg26284390 + cg26285698 + cg26286036 + cg26287783 + cg26287988 + cg26288160 + cg26289824 + cg26289880 + cg26292028 + cg26292864 + cg26293512 + cg26294551 + cg26294850 + cg26295990 + cg26297688 + cg26298099 + cg26299767 + cg26301689 + cg26301777 + cg26301908 + cg26303908 + cg26304237 + cg26306976 + cg26309134 + cg26309498 + cg26312150 + cg26312920 + cg26314781 + cg26315493 + cg26315802 + cg26316946 + cg26317056 + cg26317111 + cg26320696 + cg26322315 + cg26323655 + cg26324201 + cg26324973 + cg26328002 + cg26330371 + cg26331192 + cg26331247 + cg26332534 + cg26333317 + cg26333591 + cg26333641 + cg26335299 + cg26336164 + cg26336277 + cg26339797 + cg26344532 + cg26347745 + cg26349773 + cg26350286 + cg26350691 + cg26352374 + cg26353877 + cg26354238 + cg26354398 + cg26354413 + cg26356176 + cg26357241 + cg26357453 + cg26357744 + cg26358059 + cg26358246 + cg26359204 + cg26359240 + cg26360732 + cg26361780 + cg26361928 + cg26363196 + cg26365553 + cg26365668 + cg26365854 + cg26366091 + cg26368842 + cg26
369642 + cg26369667 + cg26371206 + cg26372517 + cg26372557 + cg26374101 + cg26376809 + cg26377677 + cg26379475 + cg26380756 + cg26381263 + cg26381783 + cg26382071 + cg26384034 + cg26385222 + cg26385286 + cg26385743 + cg26387998 + cg26388152 + cg26389232 + cg26390526 + cg26391080 + cg26392924 + cg26393983 + cg26394380 + cg26394737 + cg26394940 + cg26399035 + cg26399201 + cg26401870 + cg26402828 + cg26403198 + cg26404725 + cg26406994 + cg26408003 + cg26408937 + cg26409237 + cg26410550 + cg26411702 + cg26413355 + cg26413827 + cg26414731 + cg26415633 + cg26415655 + cg26416466 + cg26417554 + cg26420196 + cg26421123 + cg26422060 + cg26422832 + cg26424013 + cg26424956 + cg26426223 + cg26426582 + cg26427308 + cg26428825 + cg26430450 + cg26431343 + cg26436158 + cg26436315 + cg26443244 + cg26446827 + cg26449836 + cg26450541 + cg26450769 + cg26450866 + cg26451923 + cg26453588 + cg26453670 + cg26453990 + cg26454191 + cg26454299 + cg26456957 + cg26457013 + cg26459500 + cg26461637 + cg26464596 + cg26465611 + cg26465666 +
 cg26466094 + cg26466858 + cg26470338 + cg26471020 + cg26471445 + cg26473272 + cg26475085 + cg26475097 + cg26477793 + cg26478074 + cg26478992 + cg26482939 + cg26484333 + cg26486663 + cg26486702 + cg26488636 + cg26489108 + cg26490372 + cg26490839 + cg26491213 + cg26491425 + cg26491484 + cg26493932 + cg26499286 + cg26499611 + cg26500816 + cg26502489 + cg26502594 + cg26504021 + cg26504906 + cg26506209 + cg26507094 + cg26507477 + cg26508537 + cg26509022 + cg26511075 + cg26511321 + cg26512148 + cg26514492 + cg26514942 + cg26516759 + cg26516764 + cg26516941 + cg26516954 + cg26519339 + cg26520371 + cg26521404 + cg26521448 + cg26523005 + cg26523389 + cg26524263 + cg26524899 + cg26525091 + cg26526440 + cg26527984 + cg26528713 + cg26530200 + cg26530341 + cg26530497 + cg26531804 + cg26532905 + cg26533949 + cg26534508 + cg26535072 + cg26536164 + cg26536259 + cg26537639 + cg26538116 + cg26538214 + cg26538349 + cg26538442 + cg26540127 + cg26540515 + cg26541516 + cg26542130 + cg26542888 + cg26545162 + cg26548883 + cg26550
234 + cg26551843 + cg26553682 + cg26555310 + cg26556134 + cg26556719 + cg26556918 + cg26557658 + cg26560960 + cg26561254 + cg26561611 + cg26563737 + cg26565838 + cg26565975 + cg26567442 + cg26568669 + cg26568722 + cg26570233 + cg26571739 + cg26574610 + cg26575445 + cg26577178 + cg26577529 + cg26577945 + cg26578617 + cg26580095 + cg26581729 + cg26583078 + cg26586164 + cg26588422 + cg26589285 + cg26590537 + cg26591879 + cg26594445 + cg26594488 + cg26596161 + cg26599006 + cg26601286 + cg26602920 + cg26605086 + cg26606064 + cg26607785 + cg26608032 + cg26608199 + cg26608332 + cg26608667 + cg26609631 + cg26609691 + cg26610808 + cg26611683 + cg26612644 + cg26614073 + cg26614346 + cg26615126 + cg26615712 + cg26615830 + cg26616347 + cg26619317 + cg26620157 + cg26620356 + cg26620959 + cg26623224 + cg26623286 + cg26624118 + cg26624134 + cg26624273 + cg26624914 + cg26625319 + cg26626042 + cg26626089 + cg26627486 + cg26628634 + cg26628847 + cg26631477 + cg26632776 + cg26634132 + cg26635603 + cg26637069 + cg26637901 + cg
26640549 + cg26643856 + cg26644395 + cg26645834 + cg26646370 + cg26646411 + cg26646980 + cg26647453 + cg26647600 + cg26648592 + cg26649005 + cg26649834 + cg26651073 + cg26651233 + cg26651830 + cg26656113 + cg26656135 + cg26656452 + cg26657648 + cg26660414 + cg26660631 + cg26661257 + cg26661481 + cg26661623 + cg26661897 + cg26665419 + cg26666286 + cg26667975 + cg26668713 + cg26670626 + cg26672426 + cg26673195 + cg26673943 + cg26674132 + cg26674929 + cg26675077 + cg26675382 + cg26675934 + cg26677448 + cg26677874 + cg26678313 + cg26679231 + cg26680127 + cg26681081 + cg26681123 + cg26682500 + cg26682717 + cg26683005 + cg26683023 + cg26685339 + cg26687173 + cg26689483 + cg26692016 + cg26697117 + cg26698580 + cg26699283 + cg26701198 + cg26701826 + cg26702254 + cg26702875 + cg26703664 + cg26704579 + cg26705553 + cg26705561 + cg26706003 + cg26706070 + cg26709720 + cg26709859 + cg26709863 + cg26709950 + cg26710722 + cg26711820 + cg26713220 + cg26715540 + cg26716323 + cg26717133 + cg26717786 + cg26718122 + cg26718420
 + cg26718574 + cg26718585 + cg26721264 + cg26721993 + cg26723847 + cg26727372 + cg26728422 + cg26728886 + cg26729026 + cg26736450 + cg26738010 + cg26738080 + cg26738880 + cg26741595 + cg26743024 + cg26745540 + cg26746469 + cg26747293 + cg26750002 + cg26750139 + cg26750319 + cg26750747 + cg26751195 + cg26752657 + cg26753137 + cg26753512 + cg26754448 + cg26755715 + cg26755793 + cg26756083 + cg26756862 + cg26757053 + cg26757673 + cg26757722 + cg26757793 + cg26759551 + cg26759925 + cg26760212 + cg26762198 + cg26763524 + cg26764244 + cg26764555 + cg26766480 + cg26767761 + cg26767897 + cg26770281 + cg26770882 + cg26771217 + cg26771272 + cg26774312 + cg26774430 + cg26775866 + cg26776069 + cg26776077 + cg26776924 + cg26777475 + cg26778754 + cg26778807 + cg26778908 + cg26780333 + cg26780404 + cg26781150 + cg26781575 + cg26781886 + cg26782833 + cg26783353 + cg26783856 + cg26787239 + cg26787505 + cg26788107 + cg26788215 + cg26789453 + cg26790059 + cg26790132 + cg26791659 + cg26791905 + cg26792080 + cg26792365 + cg267
93710 + cg26794638 + cg26796190 + cg26796283 + cg26798624 + cg26798786 + cg26799474 + cg26799802 + cg26802333 + cg26803305 + cg26803566 + cg26804057 + cg26805528 + cg26806924 + cg26808606 + cg26808784 + cg26809210 + cg26809911 + cg26812418 + cg26813458 + cg26813908 + cg26815021 + cg26815229 + cg26815414 + cg26817382 + cg26817573 + cg26820922 + cg26822175 + cg26822241 + cg26823505 + cg26824091 + cg26824408 + cg26824467 + cg26825412 + cg26825755 + cg26826852 + cg26829131 + cg26829318 + cg26829529 + cg26831415 + cg26831968 + cg26832142 + cg26832154 + cg26832211 + cg26832879 + cg26833169 + cg26833602 + cg26838900 + cg26840318 + cg26842024 + cg26843008 + cg26843567 + cg26845278 + cg26845300 + cg26845838 + cg26847093 + cg26847490 + cg26847866 + cg26848248 + cg26850145 + cg26850503 + cg26850754 + cg26851374 + cg26851800 + cg26852159 + cg26853640 + cg26853855 + cg26855724 + cg26856388 + cg26861460 + cg26862286 + cg26863324 + cg26864028 + cg26864061 + cg26866014 + cg26866325 + cg26868799 + cg26869604 + cg26870337 +
cg26870566 + cg26872475 + cg26873164 + cg26875522 + cg26879282 + cg26884154 + cg26884376 + cg26884581 + cg26885858 + cg26887625 + cg26889928 + cg26889990 + cg26891849 + cg26894575 + cg26896762 + cg26897054 + cg26898166 + cg26898336 + cg26900034 + cg26900154 + cg26904212 + cg26904406 + cg26907768 + cg26908611 + cg26909237 + cg26909431 + cg26910205 + cg26910651 + cg26911140 + cg26911787 + cg26912636 + cg26916607 + cg26916927 + cg26917625 + cg26917999 + cg26918442 + cg26918645 + cg26918728 + cg26920757 + cg26922202 + cg26924825 + cg26926521 + cg26927807 + cg26928603 + cg26928682 + cg26928972 + cg26929490 + cg26929536 + cg26932976 + cg26934034 + cg26937148 + cg26937500 + cg26940261 + cg26940725 + cg26942392 + cg26943001 + cg26944151 + cg26946769 + cg26949796 + cg26952188 + cg26952662 + cg26954174 + cg26955850 + cg26956535 + cg26960719 + cg26962295 + cg26963271 + cg26964415 + cg26964989 + cg26965059 + cg26966384 + cg26967875 + cg26968812 + cg26970800 + cg26974738 + cg26975609 + cg26976437 + cg26977045 + cg269790
12 + cg26979339 + cg26980692 + cg26981881 + cg26982998 + cg26984624 + cg26984805 + cg26985138 + cg26985201 + cg26985289 + cg26986236 + cg26986815 + cg26987645 + cg26989103 + cg26989531 + cg26990660 + cg26991199 + cg26991292 + cg26991946 + cg26993951 + cg27000831 + cg27003571 + cg27003827 + cg27005053 + cg27005179 + cg27005181 + cg27007358 + cg27009631 + cg27009703 + cg27011042 + cg27011193 + cg27012203 + cg27014642 + cg27015047 + cg27015174 + cg27015931 + cg27016307 + cg27016494 + cg27016609 + cg27016863 + cg27016990 + cg27018070 + cg27019278 + cg27020281 + cg27020690 + cg27022827 + cg27024922 + cg27025856 + cg27026509 + cg27027803 + cg27028749 + cg27032184 + cg27032352 + cg27033479 + cg27034836 + cg27035169 + cg27035806 + cg27037648 + cg27038197 + cg27038439 + cg27039606 + cg27040030 + cg27040423 + cg27041096 + cg27043141 + cg27043427 + cg27043582 + cg27043630 + cg27043873 + cg27044702 + cg27049761 + cg27050763 + cg27050793 + cg27056119 + cg27056145 + cg27056559 + cg27056853 + cg27059238 + cg27060381 + cg2
7061366 + cg27061947 + cg27062284 + cg27062617 + cg27063525 + cg27063607 + cg27063986 + cg27065979 + cg27067618 + cg27068170 + cg27069263 + cg27069753 + cg27070899 + cg27071517 + cg27072323 + cg27072387 + cg27074297 + cg27076046 + cg27076139 + cg27076799 + cg27076812 + cg27077685 + cg27079104 + cg27079464 + cg27081230 + cg27083787 + cg27087525 + cg27087572 + cg27087809 + cg27088655 + cg27088844 + cg27088877 + cg27089714 + cg27089973 + cg27090024 + cg27090087 + cg27090216 + cg27091233 + cg27091343 + cg27091703 + cg27091787 + cg27092035 + cg27094076 + cg27094188 + cg27096144 + cg27100123 + cg27104271 + cg27105123 + cg27106233 + cg27108154 + cg27109647 + cg27109971 + cg27112247 + cg27114026 + cg27114086 + cg27114120 + cg27116713 + cg27117399 + cg27118809 + cg27118825 + cg27119222 + cg27119451 + cg27120999 + cg27121132 + cg27124774 + cg27126442 + cg27127056 + cg27132814 + cg27133864 + cg27138018 + cg27138584 + cg27140220 + cg27140880 + cg27141427 + cg27143049 + cg27143938 + cg27144162 + cg27144395 + cg27146152
+ cg27147004 + cg27147306 + cg27149093 + cg27152280 + cg27153400 + cg27154163 + cg27155653 + cg27157038 + cg27158143 + cg27158867 + cg27159719 + cg27160701 + cg27161973 + cg27164762 + cg27165888 + cg27167439 + cg27167601 + cg27168073 + cg27168844 + cg27169020 + cg27170159 + cg27170298 + cg27173322 + cg27176392 + cg27176536 + cg27177839 + cg27178345 + cg27180443 + cg27181079 + cg27182551 + cg27182555 + cg27182761 + cg27183007 + cg27185377 + cg27187881 + cg27188703 + cg27190239 + cg27190537 + cg27193335 + cg27194614 + cg27194921 + cg27195224 + cg27195917 + cg27196102 + cg27196129 + cg27196467 + cg27196745 + cg27199523 + cg27201297 + cg27202708 + cg27204739 + cg27205791 + cg27207041 + cg27207274 + cg27208307 + cg27210136 + cg27210390 + cg27210447 + cg27210766 + cg27212099 + cg27212359 + cg27212977 + cg27214365 + cg27214652 + cg27214774 + cg27215108 + cg27217148 + cg27218220 + cg27219973 + cg27221338 + cg27222589 + cg27223047 + cg27223827 + cg27225570 + cg27226214 + cg27226618 + cg27226949 + cg27227156 + cg2722
7786 + cg27227797 + cg27234090 + cg27235662 + cg27236973 + cg27238470 + cg27239147 + cg27239157 + cg27239921 + cg27241190 + cg27242945 + cg27243140 + cg27244432 + cg27244482 + cg27246571 + cg27247832 + cg27248887 + cg27250759 + cg27250927 + cg27253386 + cg27254601 + cg27256309 + cg27257408 + cg27257987 + cg27258399 + cg27258787 + cg27261136 + cg27262488 + cg27263448 + cg27264345 + cg27265637 + cg27268486 + cg27268717 + cg27269917 + cg27269921 + cg27270218 + cg27270684 + cg27272402 + cg27274028 + cg27274728 + cg27276456 + cg27277403 + cg27278802 + cg27279652 + cg27281008 + cg27281093 + cg27284019 + cg27285056 + cg27285278 + cg27285599 + cg27285616 + cg27285720 + cg27286107 + cg27286999 + cg27287498 + cg27287808 + cg27288777 + cg27289104 + cg27291231 + cg27291501 + cg27292431 + cg27293353 + cg27294629 + cg27297176 + cg27298262 + cg27298559 + cg27298878 + cg27299588 + cg27301343 + cg27303880 + cg27304754 + cg27305303 + cg27305662 + cg27305895 + cg27308387 + cg27309253 + cg27310234 + cg27310686 + cg27313662 + c
g27315279 + cg27316224 + cg27316956 + cg27318281 + cg27318318 + cg27318546 + cg27319898 + cg27320127 + cg27321538 + cg27321931 + cg27321979 + cg27322545 + cg27323780 + cg27324619 + cg27327588 + cg27329371 + cg27331144 + cg27336379 + cg27337148 + cg27339143 + cg27341860 + cg27342122 + cg27342801 + cg27345286 + cg27345534 + cg27345946 + cg27347104 + cg27348440 + cg27349244 + cg27349746 + cg27351358 + cg27351998 + cg27352063 + cg27352136 + cg27352992 + cg27356438 + cg27360003 + cg27360098 + cg27360282 + cg27360560 + cg27361716 + cg27363310 + cg27363486 + cg27365426 + cg27366669 + cg27367554 + cg27367952 + cg27368011 + cg27371741 + cg27372468 + cg27375072 + cg27376271 + cg27376817 + cg27377213 + cg27377450 + cg27378216 + cg27378424 + cg27379417 + cg27379587 + cg27380758 + cg27382389 + cg27383362 + cg27383744 + cg27383956 + cg27387222 + cg27388462 + cg27388792 + cg27389185 + cg27390220 + cg27393372 + cg27394038 + cg27394046 + cg27394486 + cg27394563 + cg27394566 + cg27395450 + cg27397287 + cg27398499 + cg2739854
7 + cg27400772 + cg27401095 + cg27402949 + cg27403635 + cg27403822 + cg27404050 + cg27406727 + cg27409012 + cg27409364 + cg27412093 + cg27412902 + cg27413025 + cg27413508 + cg27413543 + cg27416067 + cg27416437 + cg27417997 + cg27418851 + cg27419217 + cg27420123 + cg27420236 + cg27425193 + cg27425675 + cg27426707 + cg27427207 + cg27429194 + cg27431150 + cg27431247 + cg27431396 + cg27431859 + cg27433062 + cg27433088 + cg27436184 + cg27437944 + cg27440002 + cg27440834 + cg27441551 + cg27442349 + cg27443050 + cg27443224 + cg27444994 + cg27445265 + cg27446185 + cg27446233 + cg27447599 + cg27447740 + cg27449489 + cg27449959 + cg27456885 + cg27457941 + cg27458888 + cg27459381 + cg27460755 + cg27461196 + cg27462160 + cg27462371 + cg27462398 + cg27462969 + cg27464755 + cg27465566 + cg27465569 + cg27465849 + cg27465858 + cg27467734 + cg27470406 + cg27470554 + cg27472032 + cg27472295 + cg27475152 + cg27476329 + cg27477205 + cg27477594 + cg27477990 + cg27478651 + cg27478659 + cg27480700 + cg27485235 + cg27485921 + cg27
486427 + cg27488807 + cg27489994 + cg27490193 + cg27491887 + cg27493997 + cg27494383 + cg27495845 + cg27495908 + cg27496506 + cg27497687 + cg27497781 + cg27497900 + cg27498304 + cg27501380 + cg27501458 + cg27504117 + cg27504299 + cg27504805 + cg27504991 + cg27505538 + cg27507704 + cg27508002 + cg27508071 + cg27508821 + cg27510871 + cg27512828 + cg27513764 + cg27514224 + cg27518692 + cg27519140 + cg27519236 + cg27519373 + cg27519424 + cg27520502 + cg27522780 + cg27523951 + cg27524460 + cg27525902 + cg27529628 + cg27530424 + cg27532722 + cg27533013 + cg27534796 + cg27535305 + cg27537453 + cg27537561 + cg27537600 + cg27538954 + cg27539233 + cg27541374 + cg27541515 + cg27541541 + cg27542948 + cg27543230 + cg27544190 + cg27546237 + cg27546682 + cg27547703 + cg27549944 + cg27550442 + cg27550918 + cg27552599 + cg27553433 + cg27553637 + cg27553955 + cg27554769 + cg27554782 + cg27555365 + cg27555479 + cg27555776 + cg27556566 + cg27557143 + cg27557796 + cg27558666 + cg27559343 + cg27560292 + cg27560864 + cg27560922 +
 cg27561006 + cg27561421 + cg27562023 + cg27563210 + cg27563778 + cg27566805 + cg27567335 + cg27573806 + cg27573888 + cg27574244 + cg27575501 + cg27579745 + cg27582235 + cg27583030 + cg27583102 + cg27584171 + cg27585441 + cg27586455 + cg27588902 + cg27589921 + cg27590397 + cg27591196 + cg27592112 + cg27592318 + cg27596068 + cg27600136 + cg27600794 + cg27601516 + cg27601582 + cg27603796 + cg27606341 + cg27607639 + cg27608154 + cg27609819 + cg27610250 + cg27610561 + cg27611665 + cg27611781 + cg27613076 + cg27614038 + cg27619475 + cg27622610 + cg27623214 + cg27625732 + cg27626102 + cg27626299 + cg27626318 + cg27626424 + cg27626899 + cg27627570 + cg27628312 + cg27631256 + cg27631817 + cg27633903 + cg27634151 + cg27635271 + cg27635983 + cg27637521 + cg27638597 + cg27638672 + cg27638713 + cg27641018 + cg27643859 + cg27644292 + cg27648946 + cg27649653 + cg27649764 + cg27650175 + cg27650434 + cg27651218 + cg27652350 + cg27653134 + cg27654142 + cg27655855 + cg27655905 + cg27657249 + cg27657283 + cg27661264 + cg27662
379 + cg27662877 + cg27665659,#
	data = vale, prior = c(1,1,1)/3, na.action="na.omit")#
plot(zDisease, panel = panel.lda,cex = 0.7, abbrev = FALSE, xlab = "LD1", ylab = "LD2")#
quartz()#
pairs(zDisease, panel = points, cex = 0.7, abbrev = FALSE, xlab = "LD1", ylab = "LD2")#
#
#zAREA <- lda(AREA ~ ., pcaValues, prior = c(1,1,1,1,1,1,1)/7)#
#predict(zAREA, pcaValues)$class#
#(z1 <- update(z, . ~ . - Petal.W.))#
#plot(zAREA, cex = 0.7, abbrev = FALSE, xlab = "LD1", ylab = "LD2")#
#quartz()#
#
#zGender <- lda(pData(mldat.norm)$Gender ~ ., vale, prior = c(1,1)/2)#
#predict(pData(mldat.norm)$Gender, pcaValues)$class#
#(z1 <- update(z, . ~ . - Petal.W.))#
#plot(zGender, cex = 0.7, abbrev = FALSE, xlab = "LD1", ylab = "LD2",labels = colnames(zGender))#
#pairs(zGender, labels = colnames(zGender), dimen = 2,abbrev = FALSE, cex=0.7, type = c("std", "trellis"))#
#
#
#quartz()#
#zDisease <- lda(pData(mldat.norm)$Disease ~ ., vale, prior = c(1,1,1)/3)#
#predict(zGender, pcaValues)$class#
#(z1 <- update(z, . ~ . - PD))#
#plot(zDisease, cex = 0.7, abbrev = FALSE, xlab = "LD1", ylab = "LD2")
rm(list=ls(all=TRUE))#
graphics.off()#
library("methylumi")#
require("amap")#
require("Hmisc")#
require("MASS")#
require("limma")#
require("lattice")
install.packages("NameOfPkgs",#
                 lib="/dir/of/R/libs",#
                 repos=NULL,#
                 dependencies=TRUE
)
rm(list=ls(all=TRUE))#
graphics.off()#
library("methylumi")#
require("amap")#
require("Hmisc")#
require("MASS")#
require("limma")#
require("lattice")
install.packages("/Users/fmancuso/Downloads/Hmisc_3.7-0.tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos=NULL,#
                 dependencies=TRUE)
rm(list=ls(all=TRUE))#
graphics.off()#
library("methylumi")#
require("amap")#
require("Hmisc")#
require("MASS")#
require("limma")#
require("lattice")
install.packages("/Users/fmancuso/Downloads/Hmisc_3.7-0.tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos=NULL,#
                 dependencies=TRUE)
install.packages()
help("install.packages")
install.packages("/Users/fmancuso/Downloads/Hmisc_3.7-0.tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos="http://cran.r-project.org",#
                 dependencies=TRUE)
install.packages("Hmisc",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos="http://cran.r-project.org",#
                 dependencies=TRUE)
install.packages("Hmisc",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos="http://cran.r-project.org",#
                 dependencies=F)
install.packages("/Users/fmancuso/Downloads/Hmisc_3.7-0(2).tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos="NULL",#
                 dependencies=TRUE)
install.packages("/Users/fmancuso/Downloads/Hmisc_3.6-1.tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos="NULL",#
                 dependencies=TRUE)
install.packages("/Users/fmancuso/Downloads/Hmisc_3.6-1.tar.gz",#
                 lib="/Library/Frameworks/R.framework/Versions/2.11/Resources/library/",#
                 repos=NULL,#
                 dependencies=TRUE)
require(Hmisc)
install.packages("Hmisc", dep=TRUE, type="source")
sweave("/Users/fmancuso/Analysis/Rscripts/datasheet.Rnw")
Sweave("/Users/fmancuso/Analysis/Magda/Prova3.Rnw")
?RweaveLatex
Sweave("/Users/fmancuso/Analysis/Magda/Prova3.Rnw", driver = RweaveLatex(stylepath = TRUE))
Sweave("/Users/fmancuso/Analysis/Magda/Prova3.Rnw", driver = RweaveLatex())
testfile <- system.file("Sweave", "Sweave-test-1.Rnw", package = "utils")#
#
## enforce par(ask=FALSE)#
options(device.ask.default=FALSE)
tools::texi2dvi("Prova.tex", pdf=TRUE)
tools::texi2dvi("Prova3.tex", pdf=TRUE)
Sys.time
Sys.time()
as.POSIXlt(Sys.time(),"GMT")
source("http://bioconductor.org/biocLite.R")#
    biocLite("rtracklayer")
load("/Users/fmancuso/Downloads/R656/R656/R656tr.RData")
R656tr.RData
ls()
R656tr
Bioconductor()
###An example of how to use the function#
list1=letters[1:6];#
list2=letters[6:10];#
list3=letters[6:15];#
list4=letters[6:21];#
list5=letters[6:26];#
plot_venn5(list1, list2, list3, list4, list5);#
####
=================================================#
#
### here is code for the function#
#
plot_venn5=function(listA, listB, listC, listD, listE){#
#
all_ids=unique(c(listA, listB, listC, listD, listE));#
all_n=length(all_ids);#
#
#create counting matrix#
#
all_matrix=cbind(affy=rep(0,all_n),est=rep(0,all_n),glomchip=rep(0,all_n),sage=rep(0,all_n),stanford=rep(0,all_n));#
rownames(all_matrix)=all_ids;#
colnames(all_matrix)=c(substitute(listA), substitute(listB),#
substitute(listC), substitute(listD), substitute(listE)); #
all_matrix[all_ids %in% listA, 1]=1;#
all_matrix[all_ids %in% listB, 2]=1;#
all_matrix[all_ids %in% listC, 3]=1;#
all_matrix[all_ids %in% listD, 4]=1;#
all_matrix[all_ids %in% listE, 5]=1;#
#
#elements only in one data set.#
#
only1= apply(all_matrix,1,sum) == 1;#
nA=sum(all_matrix[only1, 1]);#
nB=sum(all_matrix[only1, 2]);#
nC=sum(all_matrix[only1, 3]);#
nD=sum(all_matrix[only1, 4]);#
nE=sum(all_matrix[only1, 5]);#
#
#elements overlapped in two data set.#
#
only2= apply(all_matrix,1,sum) == 2;#
nAB=sum(only2 & all_matrix[,1] & all_matrix[,2]);#
nAC=sum(only2 & all_matrix[,1] & all_matrix[,3]);#
nAD=sum(only2 & all_matrix[,1] & all_matrix[,4]);#
nAE=sum(only2 & all_matrix[,1] & all_matrix[,5]);#
nBC=sum(only2 & all_matrix[,2] & all_matrix[,3]);#
nBD=sum(only2 & all_matrix[,2] & all_matrix[,4]);#
nBE=sum(only2 & all_matrix[,2] & all_matrix[,5]);#
nCD=sum(only2 & all_matrix[,3] & all_matrix[,4]);#
nCE=sum(only2 & all_matrix[,3] & all_matrix[,5]);#
nDE=sum(only2 & all_matrix[,4] & all_matrix[,5]);#
#
#elements overlapped in three data set.#
#
only3= apply(all_matrix,1,sum) == 3;#
nABC=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3]);#
nABD=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,4]);#
nABE=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,5]);#
nACD=sum(only3 & all_matrix[,1] & all_matrix[,3] & all_matrix[,4]);#
nACE=sum(only3 & all_matrix[,1] & all_matrix[,3] & all_matrix[,5]);#
nADE=sum(only3 & all_matrix[,1] & all_matrix[,4] & all_matrix[,5]);#
nBCD=sum(only3 & all_matrix[,2] & all_matrix[,3] & all_matrix[,4]);#
nBCE=sum(only3 & all_matrix[,2] & all_matrix[,3] & all_matrix[,5]);#
nBDE=sum(only3 & all_matrix[,2] & all_matrix[,4] & all_matrix[,5]);#
nCDE=sum(only3 & all_matrix[,3] & all_matrix[,4] & all_matrix[,5]);#
#
#elements overlapped in four data set.#
#
only4= apply(all_matrix,1,sum) == 4;#
nABCD=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3] &#
all_matrix[,4]);#
nABCE=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3] &#
all_matrix[,5]);#
nABDE=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,4] &#
all_matrix[,5]);#
nACDE=sum(only4 & all_matrix[,1] & all_matrix[,3] & all_matrix[,4] &#
all_matrix[,5]);#
nBCDE=sum(only4 & all_matrix[,2] & all_matrix[,3] & all_matrix[,4] &#
all_matrix[,5]);#
#
#elements overlapped in five data set.#
#
all5= apply(all_matrix,1,sum) == 5;#
nABCDE=sum(all5);#
#
#make the plot.#
#
elps=cbind(150*cos(seq(0,2*pi,len=1000)), 60*sin(seq(0,2*pi,len=1000)));#
#
relocate_elp=function(e, alpha, x, y){#
phi=(alpha/180)*pi;#
xr=e[,1]*cos(phi)+e[,2]*sin(phi);#
yr=-e[,1]*sin(phi)+e[,2]*cos(phi);#
xr=x+xr;#
yr=y+yr;#
return(cbind(xr, yr));#
}#
#
par(mar=c(1,1,1,1)); #
plot(c(0, 400), c(0, 400), type="n", axes=F, ylab="", xlab="");#
#
polygon(relocate_elp(elps, 90,200, 250));#
polygon(relocate_elp(elps, 162,250, 220));#
polygon(relocate_elp(elps, 234,250, 150));#
polygon(relocate_elp(elps, 306,180, 125));#
polygon(relocate_elp(elps, 378,145, 200));#
#
#label the data set name.#
#
text(50, 280, colnames(all_matrix)[1]);#
text(170,400, colnames(all_matrix)[2]);#
text(350,300, colnames(all_matrix)[3]);#
text(350,20, colnames(all_matrix)[4]);#
text(55,10, colnames(all_matrix)[5]);#
#
#label the numbers#
#
text(61, 228, nA);#
text(194, 329, nB);#
text(321, 245, nC);#
text(290, 81, nD);#
text(132, 69, nE);#
#
text(146, 250, nAB, cex=0.7); #
text(123, 188, nAC, cex=0.7); #
text(275, 152, nAD, cex=0.7); #
text(137, 146, nAE, cex=0.7); #
text(243, 268, nBC, cex=0.7); #
text(175, 267, nBD, cex=0.7); #
text(187, 117, nBE, cex=0.7); #
text(286, 188, nCD, cex=0.7); #
text(267, 235, nCE, cex=0.7); #
text(228, 105, nDE, cex=0.7); #
#
text(148, 210, nABC,cex=0.7);#
text(159, 253, nABD,cex=0.7); #
text(171, 141, nABE,cex=0.7); #
text(281, 175, nACD,cex=0.7); #
text(143, 163, nACE,cex=0.7); #
text(252, 145, nADE,cex=0.7); #
text(205, 255, nBCD,cex=0.7); #
text(254, 243, nBCE,cex=0.7); #
text(211, 118, nBDE,cex=0.7); #
text(267, 211, nCDE,cex=0.7); #
#
text(170, 231,nABCD,cex=0.7); #
text(158, 169,nABCE,cex=0.7); #
text(212, 139,nABDE,cex=0.7);#
text(263, 180,nACDE,cex=0.7); #
text(239, 232,nBCDE,cex=0.7);#
#
text(204,190,nABCDE); #
}
plot_venn5=function(listA, listB, listC, listD, listE){#
#
all_ids=unique(c(listA, listB, listC, listD, listE));#
all_n=length(all_ids);#
#
#create counting matrix#
#
all_matrix=cbind(affy=rep(0,all_n),est=rep(0,all_n),glomchip=rep(0,all_n),sage=rep(0,all_n),stanford=rep(0,all_n));#
rownames(all_matrix)=all_ids;#
colnames(all_matrix)=c(substitute(listA), substitute(listB),#
substitute(listC), substitute(listD), substitute(listE)); #
all_matrix[all_ids %in% listA, 1]=1;#
all_matrix[all_ids %in% listB, 2]=1;#
all_matrix[all_ids %in% listC, 3]=1;#
all_matrix[all_ids %in% listD, 4]=1;#
all_matrix[all_ids %in% listE, 5]=1;#
#
#elements only in one data set.#
#
only1= apply(all_matrix,1,sum) == 1;#
nA=sum(all_matrix[only1, 1]);#
nB=sum(all_matrix[only1, 2]);#
nC=sum(all_matrix[only1, 3]);#
nD=sum(all_matrix[only1, 4]);#
nE=sum(all_matrix[only1, 5]);#
#
#elements overlapped in two data set.#
#
only2= apply(all_matrix,1,sum) == 2;#
nAB=sum(only2 & all_matrix[,1] & all_matrix[,2]);#
nAC=sum(only2 & all_matrix[,1] & all_matrix[,3]);#
nAD=sum(only2 & all_matrix[,1] & all_matrix[,4]);#
nAE=sum(only2 & all_matrix[,1] & all_matrix[,5]);#
nBC=sum(only2 & all_matrix[,2] & all_matrix[,3]);#
nBD=sum(only2 & all_matrix[,2] & all_matrix[,4]);#
nBE=sum(only2 & all_matrix[,2] & all_matrix[,5]);#
nCD=sum(only2 & all_matrix[,3] & all_matrix[,4]);#
nCE=sum(only2 & all_matrix[,3] & all_matrix[,5]);#
nDE=sum(only2 & all_matrix[,4] & all_matrix[,5]);#
#
#elements overlapped in three data set.#
#
only3= apply(all_matrix,1,sum) == 3;#
nABC=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3]);#
nABD=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,4]);#
nABE=sum(only3 & all_matrix[,1] & all_matrix[,2] & all_matrix[,5]);#
nACD=sum(only3 & all_matrix[,1] & all_matrix[,3] & all_matrix[,4]);#
nACE=sum(only3 & all_matrix[,1] & all_matrix[,3] & all_matrix[,5]);#
nADE=sum(only3 & all_matrix[,1] & all_matrix[,4] & all_matrix[,5]);#
nBCD=sum(only3 & all_matrix[,2] & all_matrix[,3] & all_matrix[,4]);#
nBCE=sum(only3 & all_matrix[,2] & all_matrix[,3] & all_matrix[,5]);#
nBDE=sum(only3 & all_matrix[,2] & all_matrix[,4] & all_matrix[,5]);#
nCDE=sum(only3 & all_matrix[,3] & all_matrix[,4] & all_matrix[,5]);#
#
#elements overlapped in four data set.#
#
only4= apply(all_matrix,1,sum) == 4;#
nABCD=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3] &#
all_matrix[,4]);#
nABCE=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,3] &#
all_matrix[,5]);#
nABDE=sum(only4 & all_matrix[,1] & all_matrix[,2] & all_matrix[,4] &#
all_matrix[,5]);#
nACDE=sum(only4 & all_matrix[,1] & all_matrix[,3] & all_matrix[,4] &#
all_matrix[,5]);#
nBCDE=sum(only4 & all_matrix[,2] & all_matrix[,3] & all_matrix[,4] &#
all_matrix[,5]);#
#
#elements overlapped in five data set.#
#
all5= apply(all_matrix,1,sum) == 5;#
nABCDE=sum(all5);#
#
#make the plot.#
#
elps=cbind(150*cos(seq(0,2*pi,len=1000)), 60*sin(seq(0,2*pi,len=1000)));#
#
relocate_elp=function(e, alpha, x, y){#
phi=(alpha/180)*pi;#
xr=e[,1]*cos(phi)+e[,2]*sin(phi);#
yr=-e[,1]*sin(phi)+e[,2]*cos(phi);#
xr=x+xr;#
yr=y+yr;#
return(cbind(xr, yr));#
}#
#
par(mar=c(1,1,1,1)); #
plot(c(0, 400), c(0, 400), type="n", axes=F, ylab="", xlab="");#
#
polygon(relocate_elp(elps, 90,200, 250));#
polygon(relocate_elp(elps, 162,250, 220));#
polygon(relocate_elp(elps, 234,250, 150));#
polygon(relocate_elp(elps, 306,180, 125));#
polygon(relocate_elp(elps, 378,145, 200));#
#
#label the data set name.#
#
text(50, 280, colnames(all_matrix)[1]);#
text(170,400, colnames(all_matrix)[2]);#
text(350,300, colnames(all_matrix)[3]);#
text(350,20, colnames(all_matrix)[4]);#
text(55,10, colnames(all_matrix)[5]);#
#
#label the numbers#
#
text(61, 228, nA);#
text(194, 329, nB);#
text(321, 245, nC);#
text(290, 81, nD);#
text(132, 69, nE);#
#
text(146, 250, nAB, cex=0.7); #
text(123, 188, nAC, cex=0.7); #
text(275, 152, nAD, cex=0.7); #
text(137, 146, nAE, cex=0.7); #
text(243, 268, nBC, cex=0.7); #
text(175, 267, nBD, cex=0.7); #
text(187, 117, nBE, cex=0.7); #
text(286, 188, nCD, cex=0.7); #
text(267, 235, nCE, cex=0.7); #
text(228, 105, nDE, cex=0.7); #
#
text(148, 210, nABC,cex=0.7);#
text(159, 253, nABD,cex=0.7); #
text(171, 141, nABE,cex=0.7); #
text(281, 175, nACD,cex=0.7); #
text(143, 163, nACE,cex=0.7); #
text(252, 145, nADE,cex=0.7); #
text(205, 255, nBCD,cex=0.7); #
text(254, 243, nBCE,cex=0.7); #
text(211, 118, nBDE,cex=0.7); #
text(267, 211, nCDE,cex=0.7); #
#
text(170, 231,nABCD,cex=0.7); #
text(158, 169,nABCE,cex=0.7); #
text(212, 139,nABDE,cex=0.7);#
text(263, 180,nACDE,cex=0.7); #
text(239, 232,nBCDE,cex=0.7);#
#
text(204,190,nABCDE); #
}
list1=letters[1:6];#
list2=letters[6:10];#
list3=letters[6:15];#
list4=letters[6:21];#
list5=letters[6:26];#
plot_venn5(list1, list2, list3, list4, list5);
install.packages("RGG", repos="http://R-Forge.R-project.org")
install.packages("RGG", repos="http://R-Forge.R-project.org", type="source")
install.packages(c("rJava","JavaGD","iplots"))#
install.packages("JGR",type="mac.binary")
install.packages("/Users/fmancuso/Downloads/RGG_0.1.tar.gz",repos = NULL,lib="/Users/fmancuso/Library/R/2.11/library")
library(RGG)
library(JGR)
install.packages('JGR',,'http://www.rforge.net/')
install.packages('JGR',type="source2",'http://www.rforge.net/')
install.packages('JGR',type="source",'http://www.rforge.net/')
install.packages('JGR',,'http://www.rforge.net/',type="source")
install.packages('iplot',,'http://www.rforge.net/',type="source")
remove.packages {JGR}
remove.packages(JGR)
remove.packages(JGR,lib="/Users/fmancuso/Library/R/2.11/library")
require(JGR)
remove.packages(JGR,lib="/Users/fmancuso/Library/R/2.11/library")
install.packages("rattle", dependencies=c("Depends", "Suggests"))
library(rattle)
?require
require(amap,quietly=T)
require(Hmisc,quietly=T)
require(Hmisc,quietly=F)
library(Hmisc,quietly=T, verbose=F)
?require
suppressPackageStartupMessages("amap")
require(amap)
message("ABC", "DEF")#
suppressMessages(message("ABC"))#
#
testit <- function() {#
  message("testing package startup messages")#
  packageStartupMessage("initializing ...", appendLF = FALSE)#
  Sys.sleep(1)#
  packageStartupMessage(" done")#
}#
#
testit()#
suppressPackageStartupMessages(testit())#
suppressMessages(testit()
)
a <- 1:10
a
b <- 10:20
b
b <- 11:20
a*b
as.matrix(a*b)
a %*% b
as.matrix(a) %*% as.matrix(b)
as.matrix(a) %*% b
library(Rscript)
exit
q()
/Users/fmancuso/Analysis/Magda/PaperPipeline/HumMeth27.rda
"/Users/fmancuso/Analysis/Magda/PaperPipeline/HumMeth27.rda"
library(HumMeth27QCReport)
remove.packages(HumMeth27QCReport)
remove.packages("HumMeth27QCReport")
library(HumMeth27QCReport)
require("Biobase")
library(methylumi)
source("http://www.bioconductor.org/biocLite.R")#
biocLite("Biobase")
library(methylumi)
library(Biobase)
library(HumMeth27QCReport)
?hist
log2(1)
require(IlluminaHumanMethylation27k.db)
x <- IlluminaHumanMethylation27kACCNUM
x
str(x)
mapped_probes <- mappedkeys(x)
mapped_probes
??MethilumiM
??MethylumiM
a<-c(2.4,8)
stdv(a)
sd(a)
mean(a)
median(a)
a<-c(2e5,8e9)
median(a)
sd(a)
b<-log10(a)
sd(b)
?seq
require(HumMeth27QCReport)
library(snapCGH)
datadir <- "/Users/fmancuso/Analysis/Imma/AgilentCGH"
targets <- readTargets("targets.txt", path = datadir)
targets
RG1 <- read.maimages(targets$FileName, path = datadir, source = "genepix")
?read.image
?read.maimages
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent")
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent.median")
warnings()
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent")
warnings()
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent.median")
RG1 <- read.maimages(targets$FileName, path = datadir, source = "generic")
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent")
RG1 <- read.maimages("US45102909_251469373282stp_S01_CGH_107_Sep09.txt", path = datadir, source = "agilent")
RG1 <- read.maimages("aUS45102909_251469373282stp_S01_CGH_107_Sep09.txt", path = datadir, source = "agilent")
RG1 <-read.maimages(targets$File_names,source="agilent",#
columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <-read.maimages(targets$Filename,source="agilent",#
columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <-read.maimages(targets$Filename,source="agilent",path = datadir,#
columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <- read.maimages("US45102909_251469373282stp_S01_CGH_107_Sep09.txt", path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <- read.maimages("US45102909_251469373282stp_S01_CGH_107_Sep09.txt", path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG1 <- read.maimages(targets$FileName[1:5], path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))
targets$FileName[1:5]
targets <- readTargets("targets.txt", path = datadir)
targets$FileName[1:5]
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))
RG2 <- readPositionalInfo (RG1,source="agilent")
str(RG2)
RG2$design <- c(-1, -1)
?backgroundCorrect
RG3 <- backgroundCorrect(RG2, method="normexp", normexp.method="saddle", verbose=TRUE)
?normalizeWithinArrays
MA <- normalizeWithinArrays(RG3, method = "median")
?processCGH
MA2 <- processCGH(MA, method.of.averaging = mean, ID = "ID")
MA2 <- processCGH(MA, method.of.averaging = mean, ID = ID)
MA$genes$ProbeName
MA2 <- processCGH(MA, method.of.averaging = mean, ID = MA$genes$ProbeName)
MA$genes$Position
MA$genes$Chr
rm(list=ls(all=TRUE))#
graphics.off()#
#
library("snapCGH")#
datadir <- "/Users/fmancuso/Analysis/Imma/AgilentCGH"#
#
targets <- readTargets("targets.txt", path = datadir)#
RG1 <- read.maimages(targets$FileName, path = datadir, source = "agilent", columns=list(R="rProcessedSignal",G="gProcessedSignal"))#
#RG2 <- readPositionalInfo (RG1,source="agilent")#
RG1$design <- c(-1, -1)#
#
### background correction#
RG2 <- backgroundCorrect(RG1, method="normexp", normexp.method="saddle", verbose=TRUE)#
### normalization interArray#
MA <- normalizeWithinArrays(RG2, method = "median")#
### duplicates are removed following the averaging#
MA2 <- processCGH(MA, method.of.averaging = mean, ID = MA$genes$ProbeName)
 MA$genes$Position
head(MA$genes$ProbeName)
RG2 <- readPositionalInfo (RG1,source="agilent")
RG2
RG3 <- backgroundCorrect(RG2, method="normexp", normexp.method="saddle", verbose=TRUE)
MA <- normalizeWithinArrays(RG3, method = "median")
MA1 <- normalizeWithinArrays(RG3, method = "median")#
MA1$genes$Position <- MA1$genes$Start#
### duplicates are removed following the averaging#
MA2 <- processCGH(MA1, method.of.averaging = mean, ID = MA$genes$ProbeName)
Ma1
MA1
MA2 <- processCGH(MA1, method.of.averaging = mean)
MA$genes$Position
colnames(MA1$genes)[10] <- 'Position'
colnames(MA1$genes)[10]
colnames(MA1$genes)[8]
colnames(MA1$genes)[7]
MA1 <- normalizeWithinArrays(RG3, method = "median")#
colnames(MA1$genes)[7] <- 'Position'#
### duplicates are removed following the averaging#
MA2 <- processCGH(MA1, method.of.averaging = mean, ID = MA$genes$ProbeName)
colnames(MA1$genes)[3]
colnames(MA1$genes)[2]
colnames(MA1$genes)[4]
colnames(MA1$genes)[4] <- 'ID'
MA1 <- normalizeWithinArrays(RG3, method = "median")#
colnames(MA1$genes)[7] <- 'Position'#
### duplicates are removed following the averaging#
MA2 <- processCGH(MA1, method.of.averaging = mean)
MA2 <- processCGH(MA1, method.of.averaging = mean, ID = "ID")
str(MA1$genes)
colnames(MA1$genes)[4] <- 'ID'
str(MA1$genes)
MA2 <- processCGH(MA1, method.of.averaging = mean, ID = "ID")
require(HumMeth27QCReport)
HumMeth27QCReport("/Users/fmancuso/Analysis/Magda/HumMeth27QCReport/inst/extdata",platform="Hum27",pval=0.03,ChrX=F,ClustMethod="eclidean")
parent.env()
parent.env(IlluminaHumanMethylation27kCHR)
str(IlluminaHumanMethylation27kCHR)
?mget
  library(hgu95av2.db)
str(hgu95av2CHRLOC)
ImportData <- function(Dir) {#
#
	setwd(Dir);#
#
	WorkFiles <- list.files(path = ".",pattern = ".*.txt")#
	AverageBeta <- WorkFiles[grep("AvgBeta", WorkFiles)]#
	Ctrls <- WorkFiles[grep("Control", WorkFiles)]#
	SamplesName <- WorkFiles[grep("Sample", WorkFiles)]#
	try(Discarder <- WorkFiles[grep("Discard", WorkFiles)], silent=T)#
#
	control <- read.table(Ctrls, header = TRUE, sep = "\t") #
	AvBeta <- read.table(AverageBeta, header = TRUE, sep = "\t", flush=T) #
	samps <- read.table(SamplesName, header = TRUE, sep = "\t")#
	DiscarderII <- ""#
	try(DiscarderII <- read.table(Discarder, header = F, sep = "\t"), silent=T)#
	try(DiscarderII <- as.character(DiscarderII$V1), silent=T)#
#
	samps$SampleLabel <-  samps$Sample.ID#
	colnames(samps)[1] <- "Index"#
	colnames(samps)[2] <- "SampleID"#
#
	write.table(samps,"sample.txt", sep="\t",row.names=F)#
	samps_mod <- read.table("sample.txt", header = TRUE, sep = "\t")#
#
	samps2 <- samps[with(samps, order(SampleID)), ]#
	nsample <- length(samps$Index)#
#
	pdf(file="Sample.pdf",paper="a4r", fonts="Times")#
	SamplePDF <- data.frame(samps_mod$Index[1:(length(samps_mod$Index)/2)], samps_mod$SampleID[1:(length(samps_mod$SampleID)/2)],rep(" ",(length(samps_mod$SampleID)/2)), #
							samps_mod$Index[((length(samps_mod$Index)/2)+1):length(samps_mod$Index)], samps_mod$SampleID[((length(samps_mod$SampleID)/2)+1):length(samps_mod$SampleID)])#
	colnames(SamplePDF)<-c("Index","SampleID","","Index","SampleID")#
	textplot(SamplePDF, halign="center", valign="center", show.rownames = F)#
	title("Sample List")#
	dev.off()#
#
	return(list(ctrl=control,samples=samps, AverageBeta=AverageBeta, Ctrls=Ctrls, samps_mod=samps_mod, nsample=nsample, samps2=samps2, DiscarderII=DiscarderII))#
}
Dir <- "/Users/fmancuso/Analysis/Magda/HumMeth27QCReport/inst/extdata"
pca.samples.plot<-function(data,int.col=(1:ncol(data)),main.str="Principal Component Analysis")#
{#
    data.nona<-na.delete(data[,int.col])#
    pca.res<-prcomp(t(data.nona),tol=0.1,na.action=na.omit)#
    plot(pca.res$x,xlab="PC 1",ylab="PC 2",main=main.str,pch=".")#
    text(pca.res$x,colnames(data[,int.col]),cex=0.7)#
}#
#
#################################################
############### Cluster Analysis ################
#
cluster.samples.plot<-function(data,int.col=(1:ncol(data)),main.str="", method = "")#
{#
	# Matrix reprensentation of hierarchical clustering of the samples#
    #
    data.nona<-na.delete(data[,int.col])#
    num.data <-t(data.nona)#
    #
    dist.mat <-as.matrix(Dist(num.data, method=method, diag =TRUE, upper =FALSE))#
    resclust <-hcluster(dist.mat)#
    dist.mat <-dist.mat[resclust$order,resclust$order]#
#
#old.mar<-par()$mar#
#par(mar=old.mar+c(2,1,-3,-2))    #
    par(mfrow=c(2,1))#
        image(x=seq(1,nrow(num.data)),y=seq(1,nrow(num.data)),z=dist.mat,axes=FALSE,xlab="",ylab="",main=main.str)#
            axis(1,at=seq(1,nrow(num.data)),labels=rownames(dist.mat),las=2,cex.axis=0.5)#
            axis(2,at=seq(1,nrow(num.data)),labels=rownames(dist.mat),las=2,cex.axis=0.25)#
        plot(resclust,main="",xlab="",ylab="",cex=.6,axes=FALSE)#
#par(mar=old.mar,mfrow=c(1,1))#
    par(mfrow=c(1,1))#
}
pval=0.03
ChrX=F
ClustMethod="euclidean"
#
	dataFiles <- ImportData(Dir)#
	AverageBeta <- dataFiles$AverageBeta#
	Ctrl <- dataFiles$Ctrl#
	samps_mod <- dataFiles$samps_mod#
	try(DiscarderII <- dataFiles$DiscarderII, silent=F)#
#
	lumiMethy <- lumiMethyR(AverageBeta, lib="IlluminaHumanMethylation27k.db")#
	fData(lumiMethy)$chrom<- as.factor(unlist(mget(featureNames(lumiMethy), envir=IlluminaHumanMethylation27kCHR)))
	lumiMethy.c.adj <- lumiMethyC(lumiMethy)  #### color balance adjustment#
	#
	avgPval <- colMeans(detection(lumiMethy.c.adj),na.rm = T)#
	toKeep <- (avgPval < pval)#
	try(toKeep[as.character(DiscarderII$V1)]<-FALSE, silent=T)#
	#
	lumiMethy.norm <- lumiMethyN(lumiMethy.c.adj[,toKeep], method="quantile")   #### quantile normalization based on color balance adjusted data#
#
	if (ChrX == "TRUE" || ChrX == "T")   {#
		lumiMethy.norm <- lumiMethy.norm[fData(lumiMethy.norm)$chr != "X",]#
	}   #
#
	pdf(file="ExplorativeAnalysis.pdf",width=15,height=9)#
	par(oma=c(1,1,1,1), mar=c(7.1,3.1,3.1,1.1))#
	pca.samples.plot(as.data.frame(exprs(lumiMethy.norm)))#
	cluster.samples.plot(as.data.frame(exprs(lumiMethy.norm)),main="Hierarchical Clustering",method=ClustMethod)#
	dev.off()
library(IlluminaHumanMethylation27k.db)
